function [lambda, mu, rho, theta1, theta2] = OptimalAlphaBetaTheta_3Polys_3Eqns(...
    max_matrix_fxy1, min_matrix_fxy1, ...
    max_matrix_fxy2, min_matrix_fxy2, ...
    max_matrix_gxy1, min_matrix_gxy1, ...
    max_matrix_gxy2, min_matrix_gxy2, ...
    max_matrix_hxy1, min_matrix_hxy1, ...
    max_matrix_hxy2, min_matrix_hxy2, ...
    m, n, o)
%
% % Inputs
%
% max_fxy1 : (Float)
%
% min_fxy1 : (Float)
%
% max_fxy2 : (Float)
%
% min_fxy2 : (Float)
%
% max_gxy : (Float)
%
% min_gxy : (Float)
%
% max_hxy : (Float)
%
% min_hxy : (Float)
%
% m : (Int)
%
% n : (Int)
%
% o : (Int)
%
% % Outputs
%
% alpha : (Float)
%
% beta : (Float)
%
% gamma : (Float)
%
% theta1 : (Float)
%
% theta2 : (Float)




% Assemble the four submatrices of Matrix A

% Get number of entries in f(x,y), g(x,y) and h(x,y)
nEntries_fxy = nchoosek(m + 2, 2);
nEntries_gxy = nchoosek(n + 2, 2);
nEntries_hxy = nchoosek(o + 2, 2);


v_i1_fxy = GetAsVector(diag(0 : 1 : m) * ones(m + 1, m + 1));
v_i2_fxy = GetAsVector(ones(m + 1, m + 1) * diag(0 : 1: m));
v_i1_fxy = v_i1_fxy(1 : nEntries_fxy);
v_i2_fxy = v_i2_fxy(1 : nEntries_fxy);

v_i1_gxy = GetAsVector(diag(0 : 1 : n) * ones(n + 1, n + 1));
v_i2_gxy = GetAsVector(ones(n + 1, n + 1) * diag(0 : 1 : n));
v_i1_gxy = v_i1_gxy(1 : nEntries_gxy);
v_i2_gxy = v_i2_gxy(1 : nEntries_gxy);

v_i1_hxy = GetAsVector(diag(0 : 1 : o) * ones(o + 1, o + 1));
v_i2_hxy = GetAsVector(ones(o + 1, o + 1) * diag(0 : 1 : o));
v_i1_hxy = v_i1_hxy(1 : nEntries_hxy);
v_i2_hxy = v_i2_hxy(1 : nEntries_hxy);

global SETTINGS
optimisation_method = SETTINGS.SCALING_METHOD;


switch optimisation_method
    
    case 'lambda_mu_rho'
        
        
        % Define vector f
        f = [1 -1 0 0 0 0 0];
        
        A1 = ...
            [
            ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            -1 .* v_i1_fxy ...
            -1 .* v_i2_fxy ...
            -ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1)
            ];
        
        A2 = ...
            [
            ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy, 1) ...
            -1.* v_i1_gxy ...
            -1.* v_i2_gxy ...
            zeros(nEntries_gxy,1) ...
            -ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy,1)
            ];
        
        A3 = ...
            [
            ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            -1 .* v_i1_fxy ...
            -1 .* v_i2_fxy ...
            -ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1)
            ];
        
        A4 = ...
            [
            ones(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1) ...
            -1.* v_i1_hxy ...
            -1.* v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1) ...
            -ones(nEntries_hxy, 1)
            ];
        
        A5 = [
            ones(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1) ...
            -1.* v_i1_hxy ...
            -1.* v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1) ...
            -ones(nEntries_hxy, 1)
            ];
        
        A6 = ...
            [
            ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            -1 .* v_i1_fxy ...
            -1 .* v_i2_fxy ...
            -ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1)
            ];
        
        % ---------
        
        A7 = ...
            [
            zeros(nEntries_fxy, 1) ...
            -1.* ones(nEntries_fxy, 1) ...
            v_i1_fxy ...
            v_i2_fxy ...
            ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            ];
        
        A8 = ...
            [
            zeros(nEntries_gxy,1) ...
            -1 .* ones(nEntries_gxy, 1) ...
            v_i1_gxy ...
            v_i2_gxy ...
            zeros(nEntries_gxy, 1)...
            ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy, 1)
            ];
        
        
        A9 = ...
            [
            zeros(nEntries_fxy, 1) ...
            -1.* ones(nEntries_fxy, 1) ...
            v_i1_fxy ...
            v_i2_fxy ...
            ones(nEntries_fxy, 1)...
            zeros(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1)
            ];
        
        A10 = ...
            [
            zeros(nEntries_hxy,1) ...
            -1 .* ones(nEntries_hxy, 1) ...
            v_i1_hxy ...
            v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1) ...
            ones(nEntries_hxy, 1)
            ];
        
        A11 = ...
            [
            zeros(nEntries_hxy,1) ...
            -1 .* ones(nEntries_hxy, 1) ...
            v_i1_hxy ...
            v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1) ...
            ones(nEntries_hxy, 1)
            ];
        
        A12 = ...
            [
            zeros(nEntries_gxy,1) ...
            -1 .* ones(nEntries_gxy, 1) ...
            v_i1_gxy ...
            v_i2_gxy ...
            zeros(nEntries_gxy, 1)...
            ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy, 1)
            ];
        
    case 'lambda_mu'
        
        
        % Define vector f
        f = [1 -1 0 0 0 0];
        
        A1 = ...
            [
            ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            -1 .* v_i1_fxy ...
            -1 .* v_i2_fxy ...
            -ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1)
            ];
        
        A2 = ...
            [
            ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy, 1) ...
            -1.* v_i1_gxy ...
            -1.* v_i2_gxy ...
            zeros(nEntries_gxy,1) ...
            -ones(nEntries_gxy, 1)
            ];
        
        A3 = ...
            [
            ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            -1 .* v_i1_fxy ...
            -1 .* v_i2_fxy ...
            -ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1)
            ];
        
        A4 = ...
            [
            ones(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1) ...
            -1.* v_i1_hxy ...
            -1.* v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1)
            ];
        
        A5 = ...
            [
            ones(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1) ...
            -1.* v_i1_hxy ...
            -1.* v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1)
            ];
        
        A6 = ...
            [
            ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy, 1) ...
            -1.* v_i1_gxy ...
            -1.* v_i2_gxy ...
            zeros(nEntries_gxy,1) ...
            -ones(nEntries_gxy, 1)
            ];
        % ------------------------------        
        A7 = ...
            [
            zeros(nEntries_fxy, 1) ...
            -1.* ones(nEntries_fxy, 1) ...
            v_i1_fxy ...
            v_i2_fxy ...
            ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1)
            ];
        
        A8 = ...
            [
            zeros(nEntries_gxy,1) ...
            -1 .* ones(nEntries_gxy, 1) ...
            v_i1_gxy ...
            v_i2_gxy ...
            zeros(nEntries_gxy, 1)...
            ones(nEntries_gxy, 1)
            ];
        
        
        A9 = ...
            [
            zeros(nEntries_fxy, 1) ...
            -1.* ones(nEntries_fxy, 1) ...
            v_i1_fxy ...
            v_i2_fxy ...
            ones(nEntries_fxy, 1)...
            zeros(nEntries_fxy, 1)
            ];
        
        A10 = ...
            [
            zeros(nEntries_hxy,1) ...
            -1 .* ones(nEntries_hxy, 1) ...
            v_i1_hxy ...
            v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1)
            ];
        
        A11 = ...
            [
            zeros(nEntries_hxy,1) ...
            -1 .* ones(nEntries_hxy, 1) ...
            v_i1_hxy ...
            v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1)
            ];
        
        A12 = ...
            [
            zeros(nEntries_gxy,1) ...
            -1 .* ones(nEntries_gxy, 1) ...
            v_i1_gxy ...
            v_i2_gxy ...
            zeros(nEntries_gxy, 1)...
            ones(nEntries_gxy, 1)
            ];
        
        
    case 'lambda_rho'
        
        
        % Define vector f
        f = [1 -1 0 0 0 0];
        
        A1 = ...
            [
            ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            -1 .* v_i1_fxy ...
            -1 .* v_i2_fxy ...
            -ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1)
            ];
        
        A2 = ...
            [
            ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy, 1) ...
            -1.* v_i1_gxy ...
            -1.* v_i2_gxy ...
            zeros(nEntries_gxy,1) ...
            zeros(nEntries_gxy,1)
            ];
        
        A3 = ...
            [
            ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            -1 .* v_i1_fxy ...
            -1 .* v_i2_fxy ...
            -ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1)
            ];
        
        A4 = ...
            [
            ones(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1) ...
            -1.* v_i1_hxy ...
            -1.* v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            -ones(nEntries_hxy, 1)
            ];
        
        A5 = ...
            [
            ones(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1) ...
            -1.* v_i1_hxy ...
            -1.* v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            -ones(nEntries_hxy, 1)
            ];
        
        A6 = ...
            [
            ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy, 1) ...
            -1.* v_i1_gxy ...
            -1.* v_i2_gxy ...
            zeros(nEntries_gxy,1) ...
            zeros(nEntries_gxy,1)
            ];
        % ----------------------------------
        
        A7 = ...
            [
            zeros(nEntries_fxy, 1) ...
            -1.* ones(nEntries_fxy, 1) ...
            v_i1_fxy ...
            v_i2_fxy ...
            ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            ];
        
        A8 = ...
            [
            zeros(nEntries_gxy,1) ...
            -1 .* ones(nEntries_gxy, 1) ...
            v_i1_gxy ...
            v_i2_gxy ...
            zeros(nEntries_gxy, 1)...
            zeros(nEntries_gxy, 1)
            ];
        
        
        A9 = ...
            [
            zeros(nEntries_fxy, 1) ...
            -1.* ones(nEntries_fxy, 1) ...
            v_i1_fxy ...
            v_i2_fxy ...
            ones(nEntries_fxy, 1)...
            zeros(nEntries_fxy, 1)
            ];
        
        A10 = ...
            [
            zeros(nEntries_hxy,1) ...
            -1 .* ones(nEntries_hxy, 1) ...
            v_i1_hxy ...
            v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            ones(nEntries_hxy, 1)
            ];

        A11 = ...
            [
            zeros(nEntries_hxy,1) ...
            -1 .* ones(nEntries_hxy, 1) ...
            v_i1_hxy ...
            v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            ones(nEntries_hxy, 1)
            ];
        A12 = ...
            [
            zeros(nEntries_gxy,1) ...
            -1 .* ones(nEntries_gxy, 1) ...
            v_i1_gxy ...
            v_i2_gxy ...
            zeros(nEntries_gxy, 1)...
            zeros(nEntries_gxy, 1)
            ];
        
    case 'mu_rho'
        
        
        % Define vector f
        f = [1 -1 0 0 0 0];
        A1 = ...
            [
            ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            -1 .* v_i1_fxy ...
            -1 .* v_i2_fxy ...
            zeros(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1)
            ];
        
        A2 = ...
            [
            ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy, 1) ...
            -1.* v_i1_gxy ...
            -1.* v_i2_gxy ...
            -ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy,1)
            ];
        
        A3 = ...
            [
            ones(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            -1 .* v_i1_fxy ...
            -1 .* v_i2_fxy ...
            zeros(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1)
            ];
        
        A4 = ...
            [
            ones(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1) ...
            -1.* v_i1_hxy ...
            -1.* v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            -ones(nEntries_hxy, 1)
            ];
        
        A5 = ...
            [
            ones(nEntries_hxy, 1) ...
            zeros(nEntries_hxy, 1) ...
            -1.* v_i1_hxy ...
            -1.* v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            -ones(nEntries_hxy, 1)
            ];
        
        A6 = ...
            [
            ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy, 1) ...
            -1.* v_i1_gxy ...
            -1.* v_i2_gxy ...
            -ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy,1)
            ];
        % ------------------------------------
        
        A7 = ...
            [
            zeros(nEntries_fxy, 1) ...
            -1.* ones(nEntries_fxy, 1) ...
            v_i1_fxy ...
            v_i2_fxy ...
            zeros(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1) ...
            ];
        
        A8 = ...
            [
            zeros(nEntries_gxy,1) ...
            -1 .* ones(nEntries_gxy, 1) ...
            v_i1_gxy ...
            v_i2_gxy ...
            ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy, 1)
            ];
        
        
        A9 = ...
            [
            zeros(nEntries_fxy, 1) ...
            -1.* ones(nEntries_fxy, 1) ...
            v_i1_fxy ...
            v_i2_fxy ...
            zeros(nEntries_fxy, 1) ...
            zeros(nEntries_fxy, 1)
            ];
        
        A10 = ...
            [
            zeros(nEntries_hxy,1) ...
            -1 .* ones(nEntries_hxy, 1) ...
            v_i1_hxy ...
            v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            ones(nEntries_hxy, 1)
            ];
        
        A11 = ...
            [
            zeros(nEntries_hxy,1) ...
            -1 .* ones(nEntries_hxy, 1) ...
            v_i1_hxy ...
            v_i2_hxy ...
            zeros(nEntries_hxy, 1) ...
            ones(nEntries_hxy, 1)
            ];
        
         A12 = ...
            [
            zeros(nEntries_gxy,1) ...
            -1 .* ones(nEntries_gxy, 1) ...
            v_i1_gxy ...
            v_i2_gxy ...
            ones(nEntries_gxy, 1) ...
            zeros(nEntries_gxy, 1)
            ];
    otherwise
        error('err')
        
end

% Now build the vector b
B1 = GetAsVector(max_matrix_fxy1);
B1 = B1(1 : nEntries_fxy);

B2 = GetAsVector(max_matrix_gxy1);
B2 = B2(1 : nEntries_gxy);

B3 = GetAsVector(max_matrix_fxy2);
B3 = B3(1 : nEntries_fxy);

B4 = GetAsVector(max_matrix_hxy1);
B4 = B4(1 : nEntries_hxy);

B5 = GetAsVector(max_matrix_hxy2);
B5 = B5(1 : nEntries_hxy);

B6 = GetAsVector(max_matrix_gxy2);
B6 = B6(1 : nEntries_gxy);

B7 = GetAsVector(min_matrix_fxy1);
B7 = B7(1 : nEntries_fxy);

B8 = GetAsVector(min_matrix_gxy1);
B8 = B8(1 : nEntries_gxy);

B9 = GetAsVector(min_matrix_fxy2);
B9 = B9(1 : nEntries_fxy);

B10 = GetAsVector(min_matrix_hxy1);
B10 = B10(1 : nEntries_hxy);

B11 = GetAsVector(min_matrix_hxy2);
B11 = B11(1 : nEntries_hxy);

B12 = GetAsVector(min_matrix_gxy2);
B12 = B12(1 : nEntries_gxy);



[B1, A1] = RemoveZeros(B1, A1);
[B2, A2] = RemoveZeros(B2, A2);
[B3, A3] = RemoveZeros(B3, A3);
[B4, A4] = RemoveZeros(B4, A4);
[B5, A5] = RemoveZeros(B5, A5);
[B6, A6] = RemoveZeros(B6, A6);
[B7, A7] = RemoveZeros(B7, A7);
[B8, A8] = RemoveZeros(B8, A8);
[B9, A9] = RemoveZeros(B9, A9);
[B10, A10] = RemoveZeros(B10, A10);
[B11, A11] = RemoveZeros(B11, A11);
[B12, A12] = RemoveZeros(B12, A12);

b = [...
    log10(B1); ...
    log10(B2); ...
    log10(B3); ...
    log10(B4); ...
    log10(B5); ...
    log10(B6); ...
    -log10(B7); ...
    -log10(B8); ...
    -log10(B9); ...
    -log10(B10); ...
    -log10(B11); ...
    -log10(B12); ...
    ]';

A = [ ...
    A1; ...
    A2; ...
    A3; ...
    A4; ...
    A5; ...
    A6; ...
    A7; ...
    A8; ...
    A9; ...
    A10; ...
    A11; ...
    A12; ...
    ];

warning('off')
x = linprog(f, -A, -b);
warning('on')

try
    
    switch optimisation_method
        case 'lambda_mu_rho'
            
            lambda  = 10^x(5);
            mu = 10^x(6);
            rho = 10^x(7);
            
            theta1 = 10^x(3);
            theta2 = 10^x(4);
            
        case 'lambda_mu'
            
            lambda  = 10^x(5);
            mu = 10^x(6);
            rho = 1;
            
            theta1 = 10^x(3);
            theta2 = 10^x(4);
            
            
        case 'lambda_rho'
            
            lambda  = 10^x(5);
            mu = 1;
            rho = 10^x(6);
            
            theta1 = 10^x(3);
            theta2 = 10^x(4);
            
        case 'mu_rho'
            
            lambda = 1;
            mu = 10^x(5);
            rho = 10^x(6);
            
            theta1 = 10^x(3);
            theta2 = 10^x(4);
            
        otherwise
            
            error('err')
    end
catch
    lambda = 1;
    mu = 1;
    rho = 1;
    theta1 = 1;
    theta2 = 1;
    
    
end

end


function [vLambda, PartOne] = RemoveZeros(vLambda, PartOne)
%
% % Inputs
%
% vLambda : (Vector)
%
% PartOne : (Matrix)

% % Find any zeros in the lambda vector
indeces = find(~vLambda);

% Remove corresponding rows from matrix
PartOne(indeces,:) = [];

% Remove from vector
vLambda(indeces,:) = [];


end